-- 테이블 작성.
CREATE TABLE SUBJECT
( 
    NO NUMBER,  -- pk, sequence
    NUM VARCHAR2(2) NOT NULL,   -- 학과번호 01, 02, 03, 04 ... (두 자리로 지정.)
    NAME VARCHAR2(24) NOT NULL -- 학과이름
);

ALTER TABLE SUBJECT ADD CONSTRAINT SUBJECT_NO_PK PRIMARY KEY(NO);
ALTER TABLE SUBJECT ADD CONSTRAINT SUBJECT_NUM_UK UNIQUE(NUM);

CREATE SEQUENCE SUBJECT_SEQ
START WITH 1
INCREMENT BY 1;

SELECT * FROM SUBJECT;
INSERT INTO SUBJECT(NO, NUM, NAME) VALUES(SUBJECT_SEQ.nextval, '01', 'IT학과');
COMMIT; -- DML은 반드시 커밋!!!!

----------------------------------------------------------------------------------
CREATE TABLE STUDENT
( 
    NO NUMBER, -- pk, seq
    NUM VARCHAR2(8) NOT NULL,   -- 학번(yy+학과번호)
    NAME VARCHAR2(12) NOT NULL, -- 이름
    ID VARCHAR2(12) NOT NULL,   -- 아이디
    PASSWD VARCHAR2(12) NOT NULL,   -- 패스워드
    S_NUM varchar2(2) , -- fk(학과번호)
    BIRTHDAY VARCHAR2(8) NOT NULL,  -- 생년월일
    PHONE VARCHAR2(15) NOT NULL,    -- 전화번호
    ADDRESS VARCHAR2(80) NOT NULL,  -- 주소
    EMAIL VARCHAR2(40) NOT NULL,    -- 이메일
    SDATE DATE DEFAULT SYSDATE  -- 등록일
);

ALTER TABLE STUDENT ADD CONSTRAINT STUDETN_NO_PK PRIMARY KEY(NO);
ALTER TABLE STUDENT ADD CONSTRAINT STUDETN_ID_UK UNIQUE(ID);
ALTER TABLE STUDENT ADD CONSTRAINT STUDETN_NUM_UK UNIQUE(NUM);

ALTER TABLE STUDENT ADD CONSTRAINT STUDETN_SUBJECT_NUM_FK
FOREIGN KEY(S_NUM) REFERENCES SUBJECT(NUM) ON DELETE SET NULL;

ALTER TABLE STUDENT DROP CONSTRAINT STUDETN_SUBJECT_NUM_FK;

desc student;

CREATE SEQUENCE STUDENT_SEQ
START WITH 1
INCREMENT BY 1;

INSERT INTO STUDENT VALUES(STUDENT_SEQ.nextval, ?, ?, ?, ?, ?, ?, ?, ?, ?, sysdate);
INSERT INTO STUDENT VALUES(STUDENT_SEQ.nextval, ?, ?, ?, ?, ?, ?, ?, ?, ?, sysdate);

SELECT NUM, NAME, EMAIL FROM STUDENT WHERE NAME = '김학생';

SELECT * FROM STUDENT;

-- birthday, phone, address, email, sdate
UPDATE STUDENT SET BIRTHDAY='19991010', PHONE='010-0000-0000', ADDRESS='서초구 서초동', EMAIL='kim@naver.com', SDATE=sysdate WHERE NAME = '김학생';
COMMIT;



----------------------------------------------------------------------------------
CREATE TABLE LESSON
( 
    NO NUMBER, -- pk, seq
    ABBRE VARCHAR2(2) NOT NULL,  -- 과목요약.  
    NAME VARCHAR2(40) NOT NULL  -- 과목이름.
);

ALTER TABLE LESSON ADD CONSTRAINT LESSON_NO_PK PRIMARY KEY(NO);
ALTER TABLE LESSON ADD CONSTRAINT LESSON_ABBRE_UK UNIQUE(ABBRE);

DROP TABLE LESSON;

CREATE SEQUENCE LESSON_SEQ
START WITH 1
INCREMENT BY 1;

SELECT * FROM LESSON;
DELETE FROM LESSON WHERE NO = 10;
UPDATE LESSON SET ABBRE='', NAME='' WHERE NO=10;
INSERT INTO LESSON VALUES(LESSON_SEQ.nextval, '', '');
----------------------------------------------------------------------
CREATE TABLE TRAINEE
(
    NO NUMBER, -- pk, seq
    S_NUM VARCHAR(8) ,   -- student fk(학생번호).
    ABBRE VARCHAR2(2) ,   -- lesson fk(과목요약).
    SECTION VARCHAR2(20) NOT NULL,  -- 전공, 부전공, 교양
    REGISTDATE DATE DEFAULT SYSDATE    -- 수강신청일.
);

DROP TABLE TRAINEE;

ALTER TABLE TRAINEE ADD CONSTRAINT TRAINEE_NO_PK PRIMARY KEY(NO);

ALTER TABLE TRAINEE ADD CONSTRAINT TRAINEE_STUDENT_NUM_FK
FOREIGN KEY(S_NUM) REFERENCES STUDENT(NUM) ON DELETE SET NULL;

ALTER TABLE TRAINEE ADD CONSTRAINT TRAINEE_LESSON_ABBRE_FK
FOREIGN KEY(ABBRE) REFERENCES LESSON(ABBRE) ON DELETE SET NULL;
DROP TABLE TRAINEE;

ALTER TABLE TRAINEE DROP CONSTRAINT TRAINEE_LESSON_ABBRE_FK;

CREATE SEQUENCE TRAINEE_SEQ
START WITH 1
INCREMENT BY 1;

select * from subject;

INSERT INTO SUBJECT(NO, NUM, NAME) VALUES(SUBJECT_SEQ.nextval, ?, ?);

SELECT COUNT(*) AS CNT FROM STUDENT WHERE ID = 10;

SELECT * FROM TRAINEE INNER JOIN STUDENT S ON T.S_NUM=S.NUM
INNER JOIN LESSON L ON T.ABBRE=L.ABBRE 
WHERE
GROUP BY
HAVING
ORDER BY;

SELECT T.NO, T.SECTION, T.REGISTDATE, S.NUM, S.NAME, L.ABBRE, L.NAME AS ABBRENAME FROM TRAINEE T INNER JOIN STUDENT S ON T.S_NUM=S.NUM
INNER JOIN LESSON L ON T.ABBRE=L.ABBRE ORDER BY T.NO;



-- 동일 학과의 총 count.
SELECT LPAD (COUNT(*)+1, 4, '0') AS TOTAL_COUNT FROM STUDENT WHERE S_NUM = '01';
SELECT * FROM STUDENT;

-- SUBJECT AND STUDENT간의 INNER JOIN
SELECT * FROM STUDENT STU INNER JOIN SUBJECT SUB ON STU.S_NUM=SUB.NUM;
SELECT STU.NO, STU.NUM, STU.NAME, STU.ID, PASSWD, STU.S_NUM, SUB.NAME AS SUBJECT_NAME, BIRTHDAY, PHONE, ADDRESS, EMAIL, SDATE
FROM STUDENT STU INNER JOIN SUBJECT SUB ON STU.S_NUM=SUB.NUM;

-- 공공데이터(전통시장 정보)
CREATE TABLE LANDPRICE
(
    NODENO NUMBER,
    GPSLATI NUMBER,
    GPSLONG NUMBER,
    NODEID VARCHAR2(20) NOT NULL,
    NODENM VARCHAR2(50)
);

SELECT * FROM LANDPRICE;

ALTER TABLE LANDPRICE ADD CONSTRAINT LANDPRICE_NODENO_PK PRIMARY KEY(NODENO);
ALTER TABLE LANDPRICE ADD CONSTRAINT LANDPRICE_NODEID_UK UNIQUE(NODEID);

DESC LANDPRICE;

SELECT COUNT(*) AS COUNT FROM LANDPRICE WHERE NODENO = 10;