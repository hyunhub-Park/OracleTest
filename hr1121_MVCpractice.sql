-- MCV 모델방식 적용.
SELECT * FROM STUDENT;
DROP TABLE STUDENT;
CREATE TABLE STUDENT001(
    NO NUMBER(4),
    NAME VARCHAR2(20) NOT NULL,
    KOR NUMBER(4) NOT NULL,
    ENG NUMBER(4)NOT NULL,
    MAT NUMBER(4)NOT NULL,
    TOTAL NUMBER(4),
    AVE NUMBER(5,1),
    RANK NUMBER(4)
);

ALTER TABLE STUDENT001 ADD CONSTRAINT STUDENT001_NO_PK PRIMARY KEY(NO);

DROP SEQUENCE STUDEN00_NO_SEQ;
CREATE SEQUENCE STUDENT001_NO_SEQ
START WITH 1
INCREMENT BY 1;

SELECT * FROM STUDENT001;

-- 성적을 입력하면 총점과 평균이 자동 계산되어 입력되는 트리거
CREATE OR REPLACE TRIGGER STUDENT001_INSERT_TRIGGER
BEFORE INSERT ON STUDENT001
FOR EACH ROW
BEGIN
    :NEW.TOTAL := :NEW.KOR + :NEW.ENG + :NEW.MAT;
    :NEW.AVE := ROUND(:NEW.TOTAL / 3, 1);
END;
/

-- 성적을 수정하면 총점과 평균이 같이 변하는 트리거
CREATE OR REPLACE TRIGGER STUDENT_UPDATE_TRIGGER
BEFORE UPDATE ON STUDENT001
FOR EACH ROW
BEGIN
    :NEW.TOTAL := :NEW.KOR + :NEW.ENG + :NEW.MAT;
    :NEW.AVE := ROUND(:NEW.TOTAL / 3, 1);
END;
/

-- 등수를 처리하는 저장 프로시저 생성
CREATE OR REPLACE PROCEDURE STUDENT001_RANK_PROC
IS 
    VSTUDENT_RT STUDENT001%ROWTYPE; 
    CURSOR C1 IS
    SELECT NO, RANK() OVER(ORDER BY TOTAL DESC) RANK FROM STUDENT001 ORDER BY TOTAL DESC; 
BEGIN
    FOR  VSTUDENT_RT IN C1 LOOP
        UPDATE STUDENT001 SET RANK = VSTUDENT_RT.RANK WHERE NO =  VSTUDENT_RT.NO; 
        -- COMMIT;
    END LOOP;
    COMMIT;
END;
/

EXECUTE STUDENT001_RANK_PROC;